class Solution {
    public int rob(int[] nums) {
        if(nums.length == 1) return nums[0];
        int[] arr1 = new int[nums.length - 1];
        int[] arr2 = new int[nums.length - 1];
        for(int i = 0; i < nums.length - 1; i++){
            arr1[i] = nums[i];
            arr2[i] = nums[i + 1];
            System.out.println(arr1[i] + " " + arr2[i]);
            
        }
        int val1 = helper(arr1);
        int val2 = helper(arr2);
        return Math.max(val1, val2);
    }
    public int helper(int[] arr){
        int prev1 = arr[0];
        int prev2 = 0;
        for(int i = 1; i < arr.length; i++){
            int currPick = arr[i] + prev2;
            int currNotPick = prev1;
            int curr = Math.max(currPick, currNotPick);
            prev2 = prev1;
            prev1 = curr;
        }
        return prev1;
    }
}