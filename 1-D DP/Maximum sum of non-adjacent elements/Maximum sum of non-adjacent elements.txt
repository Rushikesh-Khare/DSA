

class Solution
{
    //Function to find the maximum money the thief can get.
    public int FindMaxSum(int arr[], int n)
    {
        // Your code here
        // using tabulation
        // int[] dp = new int[n];
        // dp[0] = arr[0];
        // for(int i = 1; i < n; i++){
        //     int pick = arr[i];
        //     if(i - 2 >= 0){
        //         pick += dp[i - 2];
        //     }
        //     int notPick = dp[i - 1];
        //     dp[i] = Math.max(pick, notPick);
        // }
        // return dp[n - 1];
        // T.C. = O(N)
        // S.C. = O(N)
        // ---------------------------------------------------------------------------
        // space optimization
        int prev1 = arr[0];
        int prev2 = 0;
        for(int i = 1; i < n; i++){
            int currPick = arr[i] + prev2;
            int currNotPick = prev1;
            int curr = Math.max(currPick, currNotPick);
            prev2 = prev1;
            prev1 = curr;
            
        }
        return prev1;
        
        
    }
}